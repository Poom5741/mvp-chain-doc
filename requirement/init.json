{
  "role": "Senior Docs Engineer",
  "goal": "Migrate a repository of Markdown (*.md) into a production-ready documentation website with printable whitepaper PDF output.",
  "success_criteria": [
    "All original .md files appear as pages in a Docusaurus site with a logical sidebar.",
    "Math (tokenomics) renders on the web (KaTeX) and in the PDF (LaTeX).",
    "Mermaid diagrams render on the web and do not break the PDF build.",
    "Single command builds both the site and a typeset PDF whitepaper.",
    "CI validates prose/style, builds site, produces and uploads the PDF artifact."
  ],
  "assumptions": {
    "node": ">=18",
    "npm": ">=9",
    "pandoc": ">=3.1",
    "tex_engine": "xelatex",
    "git_provider": "GitHub",
    "brand": {
      "project_name": "YourChain",
      "primary_color": "#2E86FF",
      "logo_svg_path": "static/img/logo.svg"
    }
  },
  "inputs": {
    "source_glob": "source_docs/**/*.md",
    "assets_glob": "source_docs/assets/**/*",
    "bibtex_file": "citations/library.bib",
    "csl_style": "citations/style.csl"
  },
  "outputs": {
    "site_dir": "build",
    "pdf_path": "dist/whitepaper.pdf",
    "release_tag_prefix": "wp-v"
  },
  "repo_structure_target": {
    "create_if_missing": [
      "docs",
      "static/figures",
      "static/img",
      "analysis",
      "citations",
      ".github/workflows"
    ],
    "move_or_copy": [
      {
        "from": "source_docs/**/*.md",
        "to": "docs/",
        "transform": "md_to_mdx"
      },
      { "from": "source_docs/assets/**/*", "to": "static/figures/" }
    ]
  },
  "transforms": {
    "md_to_mdx": {
      "rules": [
        "Rename *.md -> *.mdx",
        "Convert GitHub-style admonitions to Docusaurus admonitions: NOTE|TIP|WARNING|IMPORTANT",
        "Wrap inline math $...$ and display $$...$$ unchanged; ensure KaTeX is enabled in config",
        "Keep Mermaid fenced blocks as ```mermaid ... ```",
        "Convert relative image links to /static paths when needed",
        "Ensure headings are unique; inject ids where duplicated",
        "Append reference anchors for cross-links where missing"
      ]
    }
  },
  "docusaurus": {
    "init": true,
    "package_json": {
      "name": "yourchain-whitepaper",
      "private": true,
      "scripts": {
        "start": "docusaurus start",
        "build": "docusaurus build",
        "serve": "docusaurus serve build",
        "lint:md": "markdownlint 'docs/**/*.mdx' --ignore node_modules",
        "lint:prose": "vale docs/",
        "format": "prettier -w 'docs/**/*.mdx'",
        "pdf": "make pdf",
        "all": "npm run format && npm run lint:md && npm run lint:prose && npm run build && npm run pdf"
      },
      "dependencies": {
        "@docusaurus/core": "^3",
        "@docusaurus/preset-classic": "^3",
        "@docusaurus/theme-mermaid": "^3",
        "katex": "^0.16.9",
        "remark-math": "^6",
        "rehype-katex": "^7"
      },
      "devDependencies": {
        "markdownlint-cli": "^0.40.0",
        "prettier": "^3",
        "vale": "^3"
      }
    },
    "docusaurus_config_ts": "/* minimal config */\nimport {themes as prismThemes} from 'prism-react-renderer';\nimport type {Config} from '@docusaurus/types';\nconst config: Config = {\n  title: 'YourChain Whitepaper',\n  url: 'https://yourchain.org',\n  baseUrl: '/',\n  favicon: '/img/logo.svg',\n  onBrokenLinks: 'throw',\n  onBrokenMarkdownLinks: 'warn',\n  markdown: { mermaid: true },\n  themes: ['@docusaurus/theme-mermaid'],\n  presets: [\n    ['@docusaurus/preset-classic', {\n      docs: {\n        path: 'docs', routeBasePath: '/', sidebarPath: require.resolve('./sidebars.ts'),\n        remarkPlugins: [require('remark-math')], rehypePlugins: [require('rehype-katex')]\n      },\n      theme: { customCss: require.resolve('./src/css/custom.css') }\n    }]\n  ],\n  themeConfig: {\n    colorMode: { defaultMode: 'light' },\n    prism: { theme: prismThemes.github },\n    navbar: { title: 'YourChain', logo: { alt: 'YourChain', src: '/img/logo.svg' } }\n  }\n};\nexport default config;\n",
    "sidebars_ts": "import type {SidebarsConfig} from '@docusaurus/plugin-content-docs';\nconst sidebars: SidebarsConfig = {\n  docs: [{ type: 'autogenerated', dirName: '.' }]\n};\nexport default sidebars;\n"
  },
  "seed_docs": [
    {
      "path": "docs/00-cover.mdx",
      "contents": "# YourChain Whitepaper\\n\\n> Version {VERSION} — {DATE}\\n\\n![Logo](/img/logo.svg)\\n"
    },
    {
      "path": "docs/01-abstract.mdx",
      "contents": "## Abstract\\n\\nBrief summary of protocol, goals, and contributions."
    },
    {
      "path": "docs/04-tokenomics.mdx",
      "contents": "## Tokenomics\\n\\nInline math $E_t = E_0\\,\\alpha^t$ and display: $$S(t)=\\sum_{i=0}^{t} m_i$$"
    },
    {
      "path": "docs/references.mdx",
      "contents": "## References\\n\\nList key sources; full citations rendered in PDF via Pandoc/CSL."
    }
  ],
  "analysis_folder": [
    {
      "path": "analysis/supply_curve.ipynb",
      "contents": "<placeholder create simple matplotlib curve and export SVG into static/figures/supply_curve.svg>"
    },
    {
      "path": "analysis/plots.py",
      "contents": "'''Load csvs, generate figures to static/figures'''"
    }
  ],
  "pdf_pipeline": {
    "makefile": "SITE_OUT=build\\nPDF_OUT=dist/whitepaper.pdf\\nPANDOC_MD=$(shell ls docs/*.mdx)\\n\\nall: site pdf\\n\\nsite:\\n\\tnpm ci\\n\\tnpx docusaurus build\\n\\npdf:\\n\\tmkdir -p dist\\n\\tpandoc $(PANDOC_MD) \\\\\\n\\t  --from=gfm+tex_math_dollars+tex_math_single_backslash \\\\\\n\\t  --pdf-engine=xelatex \\\\\\n\\t  --toc --toc-depth=3 \\\\\\n\\t  --metadata date=\"`date +%Y-%m-%d`\" \\\\\\n\\t  --bibliography citations/library.bib \\\\\\n\\t  --csl citations/style.csl \\\\\\n\\t  -o $(PDF_OUT)\\n\\nclean:\\n\\trm -rf build dist\\n",
    "notes": [
      "Pandoc reads the MDX as GFM; avoid JSX in MDX destined for PDF.",
      "Use static images (SVG/PNG) for charts; avoid interactive React components in PDF.",
      "Ensure TeX packages for KaTeX fonts are present (pandoc includes macros)."
    ]
  },
  "ci": {
    "github_actions": {
      "path": ".github/workflows/build.yml",
      "contents": "name: Docs\\non:\\n  push: { branches: [ main ] }\\n  pull_request: {}\\n  workflow_dispatch: {}\\njobs:\\n  build-site-and-pdf:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - uses: actions/checkout@v4\\n      - uses: actions/setup-node@v4\\n        with: { node-version: '18' }\\n      - name: Install system deps\\n        run: sudo apt-get update && sudo apt-get install -y pandoc texlive-xetex texlive-fonts-recommended texlive-latex-extra\\n      - name: Install deps\\n        run: npm ci\\n      - name: Lint markdown\\n        run: npx markdownlint 'docs/**/*.mdx' || true\\n      - name: Build Docusaurus\\n        run: npx docusaurus build\\n      - name: Build PDF\\n        run: make pdf\\n      - name: Upload artifacts\\n        uses: actions/upload-artifact@v4\\n        with:\\n          name: site-and-pdf\\n          path: |\\n            build\\n            dist/whitepaper.pdf\\n"
    }
  },
  "style_and_quality": {
    "vale_config": {
      "path": ".vale.ini",
      "contents": "[*.mdx]\\nBasedOnStyles = Vale, write-good\\n"
    },
    "markdownlint": {
      "path": ".markdownlint.json",
      "contents": "{ \"default\": true, \"MD013\": false, \"MD033\": false }"
    },
    "prettier": {
      "path": ".prettierrc",
      "contents": "{ \"proseWrap\": \"always\", \"printWidth\": 100 }"
    }
  },
  "i18n": {
    "enabled": false,
    "notes": "If later needed, enable Docusaurus i18n and create i18n/<locale>/docusaurus-plugin-content-docs."
  },
  "migration_plan": [
    "1) Create target folders as per repo_structure_target.",
    "2) Copy assets to static/ and convert image links.",
    "3) Batch-convert .md -> .mdx using transforms.md_to_mdx rules.",
    "4) Generate sidebars.ts (autogenerated) and minimal seed docs.",
    "5) Drop in docusaurus.config.ts, package.json, Makefile, CI workflow, linters.",
    "6) Run `npm run all` to format, lint, build site and pdf.",
    "7) Manually review sidebar order; add frontmatter `sidebar_position` if needed.",
    "8) Tag a release and attach dist/whitepaper.pdf."
  ],
  "acceptance_tests": [
    "Run `npm run build` → no errors; site output in /build.",
    "Run `make pdf` → dist/whitepaper.pdf exists, includes TOC and math.",
    "Random sample of Mermaid diagrams render on web and don't break PDF.",
    "References resolve on PDF when citations exist in library.bib.",
    "All internal links resolve (no 404 in site build)."
  ],
  "commands_for_user": [
    "npm create docusaurus@latest yourchain-whitepaper classic --typescript",
    "mv generated structure into repo, then replace config files with those above",
    "npm run all",
    "npx docusaurus serve build",
    "open dist/whitepaper.pdf"
  ],
  "post_migration_todos": [
    "Replace placeholder logo.svg and brand colors.",
    "Add proper `sidebar_position` metadata to key docs for ordering.",
    "Move any JSX-heavy pages to web-only (exclude from PDF inputs).",
    "Run notebooks in /analysis to regenerate charts into /static/figures."
  ]
}
